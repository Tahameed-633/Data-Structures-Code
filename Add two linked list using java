package add_two_numbers_using_linked_list;
import java.util.Scanner;
import java.util.ArrayList;
public class Node {
	int data;
	Node next;
	Node(int data)
	{
		this.data=data;
		this.next=null;
	}
	public static Node create_linked_list()
	{
		Node head=null,current=null,temp=null;
		int size,item;
		Scanner input=new Scanner(System.in);
		System.out.println("Enter the size of the linked list: ");
		size=input.nextInt();
		System.out.println("Enter the elements to store in the linked list: ");
		for(int i=1;i<=size;i++)
		{
			item=input.nextInt();
			temp=new Node(item);
			if(head==null)
			{
				head=temp;
				current=temp;
			}
			else
			{
				current.next=temp;
				current=temp;
			}
		}
		return head;
	}
	public static void display(Node head)
	{
		Node current=head;
		while(current!=null)
		{
			System.out.print(current.data+" -> ");
			current=current.next;
		}
		System.out.print("null\n");
		
	}
	public static int linked_list_to_integer(Node head)
	{
		int num=0;
		while(head!=null)
		{
			num=num*10+head.data;
			head=head.next;
		}
		return num;
	}
	public static int summed_linked_list(Node head1,Node head2)
	{
		int num1= linked_list_to_integer( head1);
		int num2= linked_list_to_integer( head2);
		int sum=num1+num2;
		return sum;
	}
	public static Node integer_to_linked_list(int num) {
	    Node temp = null, head = null, current = null;
	    ArrayList<Integer> digit = new ArrayList<>();

	    
	    if (num == 0) 
	    {
	        digit.add(0);
	    } else {
	        while (num != 0) 
	        {
	            digit.add(num % 10);
	            num = num / 10;
	        }
	    }

	    for (int i = digit.size() - 1; i >= 0; i--) {
	        temp = new Node(digit.get(i));
	        if (head == null) {
	            head = temp;
	            current = temp;
	        } else {
	            current.next = temp;
	            current = temp;
	        }
	    }
	    return head;
	}


	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Node head1=null,head2=null;
		head1=create_linked_list();
		head2=create_linked_list();
		System.out.println("The two inputed linked lissts are: ");
		display(head1);
		display(head2);
		int num=summed_linked_list(head1,head2);
		Node head=integer_to_linked_list(num);
		System.out.println("Summed linked_list:\n");
		display(head);
		

	}

}
